searchState.loadedDescShard("gmsol_store", 0, "The GMX-Solana Store Program\nADL is not enabled.\nADL is not required.\nChainlink Program is required.\nClaimable collateral for holding cannot be in output …\nResult type with <code>CoreError</code> as error type.\nDisabled market.\nEmpty Deposit.\nEmpty GLV withdrawal.\nEmpty Order.\nEmpty Shift.\nEmpty Withdrawal.\nContains the error value\nEvent buffer is not provided.\nExceed max market token balance amount of GLV.\nExceed max market token balance value of GLV.\nExceed max length limit.\nFailed to calculate market token amount to burn.\nFailed to calculate GLV amount to mint.\nFailed to calculate GLV value for market.\nFeature disabled.\nGT State has been initialized.\nDeposit is not allowed with the given market.\nNegative Market Pool Value.\nShift interval not yet passed.\nShift max price impact exceeded.\nShift value too small.\nThe static program ID\nConst version of <code>ID</code>\nInsufficient output amounts.\nInternal error.\nInvalid ADL.\nInvalid Argument.\nInvalid Borrowing Factor.\nInvalid collateral token.\nInvalid funding factors.\nInvalid GT config.\nInvalid GT discount.\nInvalid market config key.\nInvalid min output amount for limit swap.\nInvalid Oracle slot.\nInvalid Oracle timestamps range.\nInvalid position.\nInvalid position kind.\nInvalid price feed account.\nInvalid Price feed price.\nInvalid Price Report.\nInvalid Provider Kind Index.\nInvalid owner for the first deposit.\nInvalid Shift Markets\nInvalid Store Config Key.\nInvalid Swap Path.\nInvalid Swap Path length.\nInvalid Trade delta size.\nInvalid Trade delta tokens.\nInvalid Trade ID.\nInvalid trigger price.\nInvalid User Account.\nLoad account error.\nMarket account is not provided.\nMarket mismatched.\nMarket not opened.\nMarket token account mismatched.\nMarket token mint mismatched.\nMax oracle timestamps range exceeded.\nMax price age exceeded.\nMax prcie’s timestamp exceeded.\nMint account not provided.\nMissing final output token.\nMissing initial collateral token.\nMissing oracle price.\nMissing pool tokens.\nModel Error.\nMutual-referral is not allowed.\nNegative price.\nNo delegated authority is set.\nNon-defualt store is not allowed.\nNot an ATA for the given token.\nNot an Admin.\nNot enough execution fee.\nNot enough GLV token amount for the first deposit.\nNot enough market token amount for the first deposit.\nNot enough space.\nNot enough swap markets in the path.\nNot enough token amounts.\nNot enough token feeds.\nNot found.\nNot supported price provider for custom price feed.\nContains the success value\nOracle not updated.\nOracle timestamps are larger than required.\nOracle timestamps are smaller than required.\nOrder kind is not allowed.\nOwner mismatched.\nPermission denied.\nPosition is required.\nPosition is not required.\nPosition mismatched.\nPreconditions are not met.\nPrice feed is not updated.\nPrice is already set.\nPrice is stale.\nPrice Overflow.\nPrices are already set.\nReceiver mismatched.\nReferral Code has been set.\nReferral Code Mismatched.\nReferrer has been set.\nRent Receiver mismatched.\nThe output token and the secondary output token are the …\nSelf-referral is not allowed.\nStore Mismatched.\nStore Outdated.\nSynthetic token price is not allowed.\nToken account mismatched.\nToken account is not provided.\nToken amount exceeds limit.\nToken amount overflow.\nToken config is diabled.\nThe decimals of token is immutable.\nToken decimals mismatched.\nToken mint mismatched.\nToken mint is not provided.\nUnimplemented.\nUnknown Action State.\nUnknown Decrease Position Swap Type.\nUnknown Order Kind.\nUnknown Order Side.\nUnknown token.\nUser account has been initialized.\nValue overflow.\nAn Anchor generated module, providing a set of structs …\nConfirms that a given pubkey is equivalent to the program …\nConstants.\nThe Anchor codegen exposes a programming model where a …\nEvents.\nReturns the argument unchanged.\nInstructions definitions of the GMSOL Store Program.\nReturns the program ID\nConst version of <code>ID</code>\nAn Anchor generated module containing the program’s set …\nInstructions.\nCalls <code>U::from(self)</code>.\nGets the name of this [#enum_name].\nOperations.\nModule representing the program.\nStates.\nUtils.\nGenerated client accounts for <code>AcceptReceiver</code>.\nGenerated client accounts for <code>AcceptReferralCode</code>.\nGenerated client accounts for <code>AcceptStoreAuthority</code>.\nGenerated client accounts for <code>CancelOrderIfNoPosition</code>.\nGenerated client accounts for <code>CancelReferralCodeTransfer</code>.\nGenerated client accounts for <code>CheckRole</code>.\nGenerated client accounts for <code>ClaimFeesFromMarket</code>.\nGenerated client accounts for <code>ClearAllPrices</code>.\nGenerated client accounts for <code>CloseDeposit</code>.\nGenerated client accounts for <code>CloseEmptyClaimableAccount</code>.\nGenerated client accounts for <code>CloseGlvDeposit</code>.\nGenerated client accounts for <code>CloseGlvShift</code>.\nGenerated client accounts for <code>CloseGlvWithdrawal</code>.\nGenerated client accounts for <code>CloseGtExchange</code>.\nGenerated client accounts for <code>CloseMarketConfigBuffer</code>.\nGenerated client accounts for <code>CloseOrder</code>.\nGenerated client accounts for <code>CloseShift</code>.\nGenerated client accounts for <code>CloseWithdrawal</code>.\nGenerated client accounts for <code>ConfigurateGt</code>.\nGenerated client accounts for <code>ConfirmGtExchangeVault</code>.\nGenerated client accounts for <code>CreateDeposit</code>.\nGenerated client accounts for <code>CreateGlvDeposit</code>.\nGenerated client accounts for <code>CreateGlvShift</code>.\nGenerated client accounts for <code>CreateGlvWithdrawal</code>.\nGenerated client accounts for <code>CreateOrder</code>.\nGenerated client accounts for <code>CreateShift</code>.\nGenerated client accounts for <code>CreateWithdrawal</code>.\nGenerated client accounts for <code>DisableRole</code>.\nGenerated client accounts for <code>EnableRole</code>.\nGenerated client accounts for <code>ExecuteDecreaseOrder</code>.\nGenerated client accounts for <code>ExecuteDeposit</code>.\nGenerated client accounts for <code>ExecuteGlvDeposit</code>.\nGenerated client accounts for <code>ExecuteGlvShift</code>.\nGenerated client accounts for <code>ExecuteGlvWithdrawal</code>.\nGenerated client accounts for <code>ExecuteIncreaseOrSwapOrder</code>.\nGenerated client accounts for <code>ExecuteShift</code>.\nGenerated client accounts for <code>ExecuteWithdrawal</code>.\nGenerated client accounts for <code>GrantRole</code>.\nGenerated client accounts for <code>HasRole</code>.\nGenerated client accounts for <code>Initialize</code>.\nGenerated client accounts for <code>InitializeGlv</code>.\nGenerated client accounts for <code>InitializeGt</code>.\nGenerated client accounts for <code>InitializeMarket</code>.\nGenerated client accounts for <code>InitializeMarketConfigBuffer</code>.\nGenerated client accounts for <code>InitializeMarketVault</code>.\nGenerated client accounts for <code>InitializeOracle</code>.\nGenerated client accounts for <code>InitializePriceFeed</code>.\nGenerated client accounts for <code>InitializeReferralCode</code>.\nGenerated client accounts for <code>InitializeTokenMap</code>.\nGenerated client accounts for <code>InsertConfig</code>.\nGenerated client accounts for <code>InsertGlvMarket</code>.\nGenerated client accounts for <code>MarketTransferIn</code>.\nGenerated client accounts for <code>MigrateReferralCode</code>.\nGenerated client accounts for <code>PositionCut</code>.\nGenerated client accounts for <code>PrepareAssociatedTokenAccount</code>…\nGenerated client accounts for <code>PrepareGtExchangeVault</code>.\nGenerated client accounts for <code>PreparePosition</code>.\nGenerated client accounts for <code>PrepareTradeEventBuffer</code>.\nGenerated client accounts for <code>PrepareUser</code>.\nGenerated client accounts for <code>PushToMarketConfigBuffer</code>.\nGenerated client accounts for <code>PushToTokenMap</code>.\nGenerated client accounts for <code>PushToTokenMapSynthetic</code>.\nGenerated client accounts for <code>ReadMarket</code>.\nGenerated client accounts for <code>ReadMarketWithToken</code>.\nGenerated client accounts for <code>ReadTokenMap</code>.\nGenerated client accounts for <code>RemoveGlvMarket</code>.\nGenerated client accounts for <code>RequestGtExchange</code>.\nGenerated client accounts for <code>RevokeRole</code>.\nGenerated client accounts for <code>SetExpectedProvider</code>.\nGenerated client accounts for <code>SetFeedConfig</code>.\nGenerated client accounts for …\nGenerated client accounts for <code>SetPricesFromPriceFeed</code>.\nGenerated client accounts for <code>SetReferrer</code>.\nGenerated client accounts for <code>SetTokenMap</code>.\nGenerated client accounts for <code>ToggleFeature</code>.\nGenerated client accounts for <code>ToggleGTMinting</code>.\nGenerated client accounts for <code>ToggleMarket</code>.\nGenerated client accounts for <code>ToggleTokenConfig</code>.\nGenerated client accounts for <code>TransferReceiver</code>.\nGenerated client accounts for <code>TransferReferralCode</code>.\nGenerated client accounts for <code>TransferStoreAuthority</code>.\nGenerated client accounts for <code>UpdateAdlState</code>.\nGenerated client accounts for <code>UpdateGlvConfig</code>.\nGenerated client accounts for <code>UpdateGlvMarketConfig</code>.\nGenerated client accounts for <code>UpdateLastRestartedSlot</code>.\nGenerated client accounts for <code>UpdateMarketConfig</code>.\nGenerated client accounts for <code>UpdateMarketConfigWithBuffer</code>.\nGenerated client accounts for <code>UpdateOrder</code>.\nGenerated client accounts for <code>UpdatePriceFeedWithChainlink</code>.\nGenerated client accounts for <code>UseClaimableAccount</code>.\nAccess Controller Account.\nThe claimble account.\nThe token account to prepare.\nThe <code>AssociatedToken</code> program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nAssociated token program.\nAssociated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe authority of the the <code>Store</code> account.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nCaller.\nThe address to check for the role.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe address authorized to execute this instruction.\nThe caller.\nAuthority.\nThe caller.\nThe caller.\nThe caller.\nThe authority.\nThe authority.\nAuthority.\nThe caller.\nThe caller.\nThe caller.\nThe caller.\nAuthority.\nAuthority.\nThe authority of the oracle.\nThe caller.\nThe caller.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nThe address authorized to execute this instruction.\nAuthority.\nAuthority.\nAuthority\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nThe buffer to use.\nBuffer account to create.\nBuffer.\nBuffer.\nBuffer.\nChainlink Data Streams Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nConfig Account.\nThe deposit to be created.\nThe deposit to close.\nThe deposit to execute.\nTrade Event Buffer.\nTrade event buffer.\nTrade event buffer.\nTrade event buffer.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nFinal long token.\nFinal long token.\nFinal long token.\nFinal long token.\nFinal long token.\nFinal long token.\nThe ATA for final long token of the receiver.\nThe ATA for final long token of the receiver.\nThe escrow account for receiving withdrawed final long …\nThe escrow account for receiving withdrawed final long …\nThe escrow account for receiving withdrawed final long …\nThe escrow account for long tokens.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving final long token for …\nFinal long token vault.\nFinal long token vault.\nFinal output token. Used as collateral token / swap out …\nFinal output token.\nFinal output token.\nFinal output token.\nThe ATA for final output token of the receiver.\nFinal output token escrow account. Only required by …\nThe escrow account for final output tokens.\nThe escrow account for final output tokens.\nThe escrow account for final output tokens.\nFinal output token vault.\nFinal output token vault.\nFinal short token.\nFinal short token.\nFinal short token.\nFinal short token.\nFinal short token.\nFinal short token.\nThe ATA for final short token of the receiver.\nThe ATA for final short token of the receiver.\nThe escrow account for receiving withdrawed final short …\nThe escrow account for receiving withdrawed final short …\nThe escrow account for receiving withdrawed final short …\nThe escrow account for short tokens.\nThe escrow account for receiving final short token for …\nThe escrow account for receiving final short token for …\nFinal short token vault.\nFinal short token vault.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe source account.\nThe authority of the source account.\nFrom market.\nFrom market.\nFrom market.\nFrom Market.\nFrom market token.\nFrom market token.\nFrom market token.\nFrom market token.\nFrom Market token.\nFrom Market token.\nThe ATA for from market token of the owner.\nThe escrow account for the from market tokens.\nThe escrow account for the from market tokens.\nThe escrow account for from market tokens.\nThe escrow account for from market tokens.\nThe source from market token account.\nFrom market token vault.\nVault for from market tokens.\nFrom market token vault.\nFunder of the GLV shift.\nGLV.\nGLV account.\nGlv account.\nGLV.\nGLV to update.\nGLV to modify.\nGLV to modify.\nGLV.\nGLV.\nGLV account.\nGLV.\nGLV account.\nGLV deposit.\nThe GLV deposit to close.\nThe GLV deposit to execute.\nGLV shift.\nThe GLV shift to close.\nThe GLV shift to close.\nGLV Token.\nGLV token.\nGLV token mint.\nGlv token.\nGLV Token.\nGLV token.\nGLV token mint.\nThe ATA for GLV token of the receiver.\nThe ATA for GLV token of the owner.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe token program for GLV token.\nToken program for GLV token.\nThe token program for GLV token.\nThe token program for GLV token.\nToken program for GLV token.\nThe token program for GLV token.\nThe source GLV token account.\nGLV withdrawal.\nThe GLV withdrawal to close.\nThe GLV withdrawal to execute.\nThe holding address.\nInitial collateral token / swap in token. Only required by …\nInitial collateral token.\nInitial collateral token.\nThe ATA for initial collateral token of the owner.\nInitial collateral token escrow account. Only requried by …\nThe escrow account for initial collateral tokens.\nThe escrow account for initial collateral tokens.\nThe source initial token account. Only requried by …\nInitial collatearl token vault.\nInitial long token.\nInitial long token.\nInitial long token.\nInitial long token.\nInitial long token.\nInitial long token.\nThe ATA for initial long token of the owner.\nThe ATA for initial long token of the owner.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe escrow account for initial long tokens.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe source initial long token account.\nThe source initial long token account.\nInitial long token vault.\nInitial long token vault.\ninitial short token.\nInitial short token.\nInitial short token.\ninitial short token.\nInitial short token.\nInitial short token.\nThe ATA for initial short token of the owner.\nThe ATA for initial short token of the owner.\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe escrow account for initial short tokens.\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe source initial short token account.\nThe source initial short token account.\nInitial short token vault.\nInitial short token vault.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLong token of the market.\nLong token.\nLong token.\nLong token.\nLong token.\nThe ATA for long token of the receiver.\nLong token escrow. Only required by increase and decrease …\nThe escrow account for long tokens.\nThe escrow account for long tokens.\nThe escrow account for long tokens.\nThe escrow account for long tokens.\nLong token.\nLong token vault must exist.\nLong token vault.\nLong token vault.\nLong token vault.\nThe market account.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nThe market to update the ADL state.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token mint.\nMarket token.\nMarket token.\nMarket token.\nMarket token mint.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token mint.\nThe ATA of the owner for receving market tokens.\nThe ATA for market token of the receiver.\nThe ATA for market token of the owner.\nThe ATA for market token of the owner.\nThe ATA for market token of the owner.\nThe escrow account for receving market tokens.\nThe escrow account for receving market tokens.\nThe escrow account for receving market tokens to burn.\nThe escrow account for receving market tokens to burn.\nThe escrow account for receving market tokens.\nThe escrow account for receving market tokens to burn.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nMarket token mint.\nThe source market token account.\nThe source market token account.\nMarket token vault.\nMarket token vault for the GLV.\nMarket token vault for the GLV.\nMarket token wihtdrawal vault.\nToken mint.\nMint.\nThe mint account for the token account.\nNext authority address.\nThe next authority.\nThe new receiver.\nThe next receiver.\nThe new oracle account.\nOracle.\nOracle.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nThe oracle buffer to use.\nBuffer for oracle prices.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nThe order to be created.\nOrder to close.\nOrder to update.\nOrder to check.\nOrder to execute.\nOrder to execute.\nThe order to be created.\nOwner.\nThe owner of the deposit.\nThe owner of the deposit.\nThe owner.\nThe owner of the withdrawal.\nThe owner of the order to be created.\nThe owner of the order to be created.\nThe owner of the order.\nOwner.\nThe owner of the order.\nThe owner of the order.\nThe owner of the position.\nThe owner.\nThe owenr of the shift.\nOwner.\nOwner.\nThe owner of the deposit.\nThe owner of the deposit.\nOwner.\nThe owner of the deposit.\nThe payer for the rent-exempt fee of the <code>Store</code> Account.\nThe payer.\nThe payer.\nThe payer.\nThe position.\nThe related position.\nValidate that the position does not exist (or is owned by …\nPrice feed.\nPrice Feed Account.\nThe receiver address of the the <code>Store</code> account.\nReceiver.\nThe receiver of the output funds.\nThe receiver of the deposit.\nThe receiver of the output funds.\nThe receiver of the withdrawal.\nThe receiver of the output funds.\nThe receiver of the order.\nThe receiver of the output funds.\nThe receiver of the shift.\nThe receiver of the output funds.\nThe recevier of the deposit.\nThe receiver of the output funds.\nThe receiver of the deposit.\nReceiver.\nReceiver.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferrer User Account.\nReferrer.\nThe rent receiver of the order.\nShift.\nThe shift to close.\nThe shift to execute.\nShort token of the market.\nShort token.\nShort token.\nShort token.\nShort token.\nThe ATA for initial collateral token of the receiver.\nShort token escrow. Only required by increase and decrease …\nThe escrow account for short tokens.\nThe escrow account for short tokens.\nThe escrow account for short tokens.\nThe escrow account for short tokens.\nShort token.\nShort token vault must exist.\nShort token vault.\nShort token vault.\nShort token vault.\nThe account to be used for creating the <code>Store</code> Account. Its …\nThe store account whose authority is to be transferred.\nThe store account whose authority is to be transferred.\nThe store account whose authority is being transferred.\nThe store account whose receiver is to be transferred.\nThe store account whose receiver is being transferred.\nStore.\nStore.\nThe store account in which the role is defined.\nThe store account in which the role is defined.\nThe store account for which the role is to be …\nThe store account for which the role is to be disabled.\nThe store account to which the new role is to be granted.\nThe store account from which the new role is to be revoked.\nThe store account for the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store account.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store account that will be the owner of the oracle …\nStore.\nStore.\nStore.\nThe store.\nStore.\nThe store.\nStore.\nStore.\nThe store.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store that owns the market.\nStore.\nStore.\nThe store.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store.\nStore.\nStore.\nThe store.\nStore.\nStore.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nStore wallet ATA.\nSystem program.\nThe <code>System</code> program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nSystem Program.\nSystem Program.\nSystem Program.\nThe <code>System</code> program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nSystem Program.\nThe system program.\nThe system program.\nInitial collatearl token vault. The system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nSystem program.\nSystem program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nTo market.\nTo market.\nTo market.\nTo Market.\nTo market token.\nTo market token.\nTo market token.\nTo market token.\nTo Market token.\nTo Market token.\nThe ATA for receiving to market tokens.\nThe ATA for to market token of the receiver.\nThe escrow account for the to market tokens.\nThe escrow account for the to market tokens.\nThe escrow account for to market tokens.\nThe escrow account for to market tokens.\nVault for to market tokens.\nThe token to push config for.\nToken map to use.\nThe token map account to be initialized.\nThe token map to push config to.\nThe token map to push config to.\nThe token map to update.\nThe token map to update.\nThe token map to update.\nToken map.\nThe token map account.\nToken map.\nToken Map.\nToken map.\nToken Map.\nToken Map.\nToken map.\nToken map.\nToken map.\nToken Map.\nToken Map.\nToken Map.\nToken Program.\nToken Program.\nToken Program.\nThe <code>Token</code> program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nToken program for market token.\nToken program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nThe market vault.\nThe vault to create.\nVault.\nVault.\nVerifier Account.\nThe withdrawal to be created.\nThe withdrawal to close.\nThe withdrawal to execute.\nClaimable Account Seed.\nDefault max ADL prices staleness (in seconds).\nDefault claimable time window.\nDefault GT vault time window size.\nDefault oracle max age.\nDefault oracle max future timestamp excess (in seconds).\nDefault oracle max timestamp range.\nDefault oracle ref price deviation.\nDefault recent time window.\nDefault request expiration.\nEscrow Account Seed.\nEvent authority SEED.\nAdjustment factor for saving funding amount per size.\nGT Mint Seed.\nMarket Token Mint Address Seed.\nDecimals of usd values of factors.\nDecimals of a market token.\nUSD value to amount divisor.\nUnit USD value i.e. <code>one</code>.\nMarket Vault Seed.\nDefault GLV configs.\nDefault market configs.\nDefault GLV max shift price impact factor.\nDefault GLV min shift interval seconds.\nDefault GLV min shift value.\nDefault borrowing fee above optimal usage factor for long.\nDefault borrowing fee above optimal usage factor for short.\nDefault borrowing fee base factor for long.\nDefault borrowing fee base factor for short.\nDefault borrowing fee exponent for long.\nDefault borrowing fee exponent for short.\nDefault borrowing fee factor for long.\nDefault borrowing fee factor for short.\nDefault borrowing fee optimal usage factor for long.\nDefault borrowing fee optimal usage factor for short.\nDefault funding fee decrease factor per second.\nDefault funding fee exponent.\nDefault funding factor.\nDefault funding fee increase factor per second.\nDefault funding fee max factor per second.\nDefault funding fee min factor per second.\nDefault funding fee threshold for decrease funding.\nDefault funding fee threshold for stable funding.\nDefault ignore open interest for usage factor.\nDefault liquidation fee factor.\nDefault max negative position impact factor.\nDefault max open interest for long.\nDefault max open interest for short.\nDefault max pnl factor for long adl.\nDefault max pnl factor for long deposit.\nDefault max pnl factor for long trader.\nDefault max pnl factor for long withdrawal.\nDefault max pnl factor for short adl.\nDefault max pnl factor for short deposit.\nDefault max pnl factor for short trader.\nDefault max pnl factor for short withdrawal.\nDefault max pool amount for long token.\nDefault max pool amount for short token.\nDefault max pool value for deposit for long token.\nDefault max pool value for deposit for short token.\nDefault max position impact factor for liquidations.\nDefault max positive position impact factor.\nDefault min collateral factor.\nDefault min collateral factor for open interest for long\nDefault min collateral factor for open interest for short\nDefault min collateral value.\nDefault min pnl factor after long adl.\nDefault min pnl factor after short adl.\nDefault min position impact pool amount.\nDefault min position size usd.\nDefault min tokens for first deposit.\nDefault open interest reserve factor.\nDefault order fee factor for negative impact.\nDefault order fee factor for positive impact.\nDefault position impact distribute factor.\nDefault position impact exponent.\nDefault position impact negative factor.\nDefault position impact positive factor.\nDefault receiver factor.\nDefault reserve factor.\nDefault skip borrowing fee for smaller side.\nDefault swap fee factor for negative impact.\nDefault swap fee factor for positive impact.\nDefault swap impact exponent.\nDefault swap impact negative factor.\nDefault swap impact positive factor.\nAn Anchor generated module, providing a set of structs …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerated CPI struct of the accounts for <code>AcceptReceiver</code>.\nGenerated CPI struct of the accounts for <code>AcceptReferralCode</code>…\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>CheckRole</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>ClearAllPrices</code>.\nGenerated CPI struct of the accounts for <code>CloseDeposit</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>CloseGlvDeposit</code>.\nGenerated CPI struct of the accounts for <code>CloseGlvShift</code>.\nGenerated CPI struct of the accounts for <code>CloseGlvWithdrawal</code>…\nGenerated CPI struct of the accounts for <code>CloseGtExchange</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>CloseOrder</code>.\nGenerated CPI struct of the accounts for <code>CloseShift</code>.\nGenerated CPI struct of the accounts for <code>CloseWithdrawal</code>.\nGenerated CPI struct of the accounts for <code>ConfigurateGt</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>CreateDeposit</code>.\nGenerated CPI struct of the accounts for <code>CreateGlvDeposit</code>.\nGenerated CPI struct of the accounts for <code>CreateGlvShift</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>CreateOrder</code>.\nGenerated CPI struct of the accounts for <code>CreateShift</code>.\nGenerated CPI struct of the accounts for <code>CreateWithdrawal</code>.\nGenerated CPI struct of the accounts for <code>DisableRole</code>.\nGenerated CPI struct of the accounts for <code>EnableRole</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>ExecuteDeposit</code>.\nGenerated CPI struct of the accounts for <code>ExecuteGlvDeposit</code>.\nGenerated CPI struct of the accounts for <code>ExecuteGlvShift</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>ExecuteShift</code>.\nGenerated CPI struct of the accounts for <code>ExecuteWithdrawal</code>.\nGenerated CPI struct of the accounts for <code>GrantRole</code>.\nGenerated CPI struct of the accounts for <code>HasRole</code>.\nGenerated CPI struct of the accounts for <code>Initialize</code>.\nGenerated CPI struct of the accounts for <code>InitializeGlv</code>.\nGenerated CPI struct of the accounts for <code>InitializeGt</code>.\nGenerated CPI struct of the accounts for <code>InitializeMarket</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>InitializeOracle</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>InitializeTokenMap</code>…\nGenerated CPI struct of the accounts for <code>InsertConfig</code>.\nGenerated CPI struct of the accounts for <code>InsertGlvMarket</code>.\nGenerated CPI struct of the accounts for <code>MarketTransferIn</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>PositionCut</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>PreparePosition</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>PrepareUser</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>PushToTokenMap</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>ReadMarket</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>ReadTokenMap</code>.\nGenerated CPI struct of the accounts for <code>RemoveGlvMarket</code>.\nGenerated CPI struct of the accounts for <code>RequestGtExchange</code>.\nGenerated CPI struct of the accounts for <code>RevokeRole</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>SetFeedConfig</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>SetReferrer</code>.\nGenerated CPI struct of the accounts for <code>SetTokenMap</code>.\nGenerated CPI struct of the accounts for <code>ToggleFeature</code>.\nGenerated CPI struct of the accounts for <code>ToggleGTMinting</code>.\nGenerated CPI struct of the accounts for <code>ToggleMarket</code>.\nGenerated CPI struct of the accounts for <code>ToggleTokenConfig</code>.\nGenerated CPI struct of the accounts for <code>TransferReceiver</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>UpdateAdlState</code>.\nGenerated CPI struct of the accounts for <code>UpdateGlvConfig</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>UpdateMarketConfig</code>…\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>UpdateOrder</code>.\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for …\nAccess Controller Account.\nThe claimble account.\nThe token account to prepare.\nThe <code>AssociatedToken</code> program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nAssociated token program.\nAssociated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe authority of the the <code>Store</code> account.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nCaller.\nThe address to check for the role.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe address authorized to execute this instruction.\nThe caller.\nAuthority.\nThe caller.\nThe caller.\nThe caller.\nThe authority.\nThe authority.\nAuthority.\nThe caller.\nThe caller.\nThe caller.\nThe caller.\nAuthority.\nAuthority.\nThe authority of the oracle.\nThe caller.\nThe caller.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nThe address authorized to execute this instruction.\nAuthority.\nAuthority.\nAuthority\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nThe buffer to use.\nBuffer account to create.\nBuffer.\nBuffer.\nBuffer.\nChainlink Data Streams Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nConfig Account.\nThe deposit to be created.\nThe deposit to close.\nThe deposit to execute.\nTrade Event Buffer.\nTrade event buffer.\nTrade event buffer.\nTrade event buffer.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nThe executor of this instruction.\nFinal long token.\nFinal long token.\nFinal long token.\nFinal long token.\nFinal long token.\nFinal long token.\nThe ATA for final long token of the receiver.\nThe ATA for final long token of the receiver.\nThe escrow account for receiving withdrawed final long …\nThe escrow account for receiving withdrawed final long …\nThe escrow account for receiving withdrawed final long …\nThe escrow account for long tokens.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving final long token for …\nFinal long token vault.\nFinal long token vault.\nFinal output token. Used as collateral token / swap out …\nFinal output token.\nFinal output token.\nFinal output token.\nThe ATA for final output token of the receiver.\nFinal output token escrow account. Only required by …\nThe escrow account for final output tokens.\nThe escrow account for final output tokens.\nThe escrow account for final output tokens.\nFinal output token vault.\nFinal output token vault.\nFinal short token.\nFinal short token.\nFinal short token.\nFinal short token.\nFinal short token.\nFinal short token.\nThe ATA for final short token of the receiver.\nThe ATA for final short token of the receiver.\nThe escrow account for receiving withdrawed final short …\nThe escrow account for receiving withdrawed final short …\nThe escrow account for receiving withdrawed final short …\nThe escrow account for short tokens.\nThe escrow account for receiving final short token for …\nThe escrow account for receiving final short token for …\nFinal short token vault.\nFinal short token vault.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe source account.\nThe authority of the source account.\nFrom market.\nFrom market.\nFrom market.\nFrom Market.\nFrom market token.\nFrom market token.\nFrom market token.\nFrom market token.\nFrom Market token.\nFrom Market token.\nThe ATA for from market token of the owner.\nThe escrow account for the from market tokens.\nThe escrow account for the from market tokens.\nThe escrow account for from market tokens.\nThe escrow account for from market tokens.\nThe source from market token account.\nFrom market token vault.\nVault for from market tokens.\nFrom market token vault.\nFunder of the GLV shift.\nGLV.\nGLV account.\nGlv account.\nGLV.\nGLV to update.\nGLV to modify.\nGLV to modify.\nGLV.\nGLV.\nGLV account.\nGLV.\nGLV account.\nGLV deposit.\nThe GLV deposit to close.\nThe GLV deposit to execute.\nGLV shift.\nThe GLV shift to close.\nThe GLV shift to close.\nGLV Token.\nGLV token.\nGLV token mint.\nGlv token.\nGLV Token.\nGLV token.\nGLV token mint.\nThe ATA for GLV token of the receiver.\nThe ATA for GLV token of the owner.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe token program for GLV token.\nToken program for GLV token.\nThe token program for GLV token.\nThe token program for GLV token.\nToken program for GLV token.\nThe token program for GLV token.\nThe source GLV token account.\nGLV withdrawal.\nThe GLV withdrawal to close.\nThe GLV withdrawal to execute.\nThe holding address.\nInitial collateral token / swap in token. Only required by …\nInitial collateral token.\nInitial collateral token.\nThe ATA for initial collateral token of the owner.\nInitial collateral token escrow account. Only requried by …\nThe escrow account for initial collateral tokens.\nThe escrow account for initial collateral tokens.\nThe source initial token account. Only requried by …\nInitial collatearl token vault.\nInitial long token.\nInitial long token.\nInitial long token.\nInitial long token.\nInitial long token.\nInitial long token.\nThe ATA for initial long token of the owner.\nThe ATA for initial long token of the owner.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe escrow account for initial long tokens.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe source initial long token account.\nThe source initial long token account.\nInitial long token vault.\nInitial long token vault.\ninitial short token.\nInitial short token.\nInitial short token.\ninitial short token.\nInitial short token.\nInitial short token.\nThe ATA for initial short token of the owner.\nThe ATA for initial short token of the owner.\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe escrow account for initial short tokens.\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe source initial short token account.\nThe source initial short token account.\nInitial short token vault.\nInitial short token vault.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLong token of the market.\nLong token.\nLong token.\nLong token.\nLong token.\nThe ATA for long token of the receiver.\nLong token escrow. Only required by increase and decrease …\nThe escrow account for long tokens.\nThe escrow account for long tokens.\nThe escrow account for long tokens.\nThe escrow account for long tokens.\nLong token.\nLong token vault must exist.\nLong token vault.\nLong token vault.\nLong token vault.\nThe market account.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nThe market to update the ADL state.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token mint.\nMarket token.\nMarket token.\nMarket token.\nMarket token mint.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token mint.\nThe ATA of the owner for receving market tokens.\nThe ATA for market token of the receiver.\nThe ATA for market token of the owner.\nThe ATA for market token of the owner.\nThe ATA for market token of the owner.\nThe escrow account for receving market tokens.\nThe escrow account for receving market tokens.\nThe escrow account for receving market tokens to burn.\nThe escrow account for receving market tokens to burn.\nThe escrow account for receving market tokens.\nThe escrow account for receving market tokens to burn.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nMarket token mint.\nThe source market token account.\nThe source market token account.\nMarket token vault.\nMarket token vault for the GLV.\nMarket token vault for the GLV.\nMarket token wihtdrawal vault.\nToken mint.\nMint.\nThe mint account for the token account.\nNext authority address.\nThe next authority.\nThe new receiver.\nThe next receiver.\nThe new oracle account.\nOracle.\nOracle.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nThe oracle buffer to use.\nBuffer for oracle prices.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nThe order to be created.\nOrder to close.\nOrder to update.\nOrder to check.\nOrder to execute.\nOrder to execute.\nThe order to be created.\nOwner.\nThe owner of the deposit.\nThe owner of the deposit.\nThe owner.\nThe owner of the withdrawal.\nThe owner of the order to be created.\nThe owner of the order to be created.\nThe owner of the order.\nOwner.\nThe owner of the order.\nThe owner of the order.\nThe owner of the position.\nThe owner.\nThe owenr of the shift.\nOwner.\nOwner.\nThe owner of the deposit.\nThe owner of the deposit.\nOwner.\nThe owner of the deposit.\nThe payer for the rent-exempt fee of the <code>Store</code> Account.\nThe payer.\nThe payer.\nThe payer.\nThe position.\nThe related position.\nValidate that the position does not exist (or is owned by …\nPrice feed.\nPrice Feed Account.\nThe receiver address of the the <code>Store</code> account.\nReceiver.\nThe receiver of the output funds.\nThe receiver of the deposit.\nThe receiver of the output funds.\nThe receiver of the withdrawal.\nThe receiver of the output funds.\nThe receiver of the order.\nThe receiver of the output funds.\nThe receiver of the shift.\nThe receiver of the output funds.\nThe recevier of the deposit.\nThe receiver of the output funds.\nThe receiver of the deposit.\nReceiver.\nReceiver.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferrer User Account.\nReferrer.\nThe rent receiver of the order.\nShift.\nThe shift to close.\nThe shift to execute.\nShort token of the market.\nShort token.\nShort token.\nShort token.\nShort token.\nThe ATA for initial collateral token of the receiver.\nShort token escrow. Only required by increase and decrease …\nThe escrow account for short tokens.\nThe escrow account for short tokens.\nThe escrow account for short tokens.\nThe escrow account for short tokens.\nShort token.\nShort token vault must exist.\nShort token vault.\nShort token vault.\nShort token vault.\nThe account to be used for creating the <code>Store</code> Account. Its …\nThe store account whose authority is to be transferred.\nThe store account whose authority is to be transferred.\nThe store account whose authority is being transferred.\nThe store account whose receiver is to be transferred.\nThe store account whose receiver is being transferred.\nStore.\nStore.\nThe store account in which the role is defined.\nThe store account in which the role is defined.\nThe store account for which the role is to be …\nThe store account for which the role is to be disabled.\nThe store account to which the new role is to be granted.\nThe store account from which the new role is to be revoked.\nThe store account for the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store account.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store account that will be the owner of the oracle …\nStore.\nStore.\nStore.\nThe store.\nStore.\nThe store.\nStore.\nStore.\nThe store.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store that owns the market.\nStore.\nStore.\nThe store.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store.\nStore.\nStore.\nThe store.\nStore.\nStore.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nStore wallet ATA.\nSystem program.\nThe <code>System</code> program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nSystem Program.\nSystem Program.\nSystem Program.\nThe <code>System</code> program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nSystem Program.\nThe system program.\nThe system program.\nInitial collatearl token vault. The system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nSystem program.\nSystem program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nTo market.\nTo market.\nTo market.\nTo Market.\nTo market token.\nTo market token.\nTo market token.\nTo market token.\nTo Market token.\nTo Market token.\nThe ATA for receiving to market tokens.\nThe ATA for to market token of the receiver.\nThe escrow account for the to market tokens.\nThe escrow account for the to market tokens.\nThe escrow account for to market tokens.\nThe escrow account for to market tokens.\nVault for to market tokens.\nThe token to push config for.\nToken map to use.\nThe token map account to be initialized.\nThe token map to push config to.\nThe token map to push config to.\nThe token map to update.\nThe token map to update.\nThe token map to update.\nToken map.\nThe token map account.\nToken map.\nToken Map.\nToken map.\nToken Map.\nToken Map.\nToken map.\nToken map.\nToken map.\nToken Map.\nToken Map.\nToken Map.\nToken Program.\nToken Program.\nToken Program.\nThe <code>Token</code> program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nToken program for market token.\nToken program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nThe market vault.\nThe vault to create.\nVault.\nVault.\nVerifier Account.\nThe withdrawal to be created.\nThe withdrawal to close.\nThe withdrawal to execute.\nMarket borrowing fees updated event.\nBurn.\nDeposit.\nDeposit Created Event.\nDeposit executed Event.\nDeposit removed event.\nEvent.\nMarket clocks.\nMarket State.\nA pool for market.\nPosition State.\nTrade Fees.\nOutput amounts.\nTrade PnL.\nPrice.\nTrade Prices.\nTransfer Out.\nGLV Deposit removed event.\nGLV pricing event.\nPricing kind.\nGLV Withdrawal removed event.\nGT Update Kind.\nGT updated event.\nIs collateral long.\nIs increase.\nIs long.\nMarket fees updated event.\nMarket State Updated Event.\nMint.\nOrder created event.\nOrder removed event.\nPosition decrease event.\nPosition increased event.\nReward.\nShift removed event.\nSwap executed Event.\nTrade event data.\nTrade event.\nTrade Fees.\nTrade Data Flags.\nFlags container generated by the macro.\nOutput amounts.\nTrade PnL.\nPrice.\nPrices.\nWithdrawal.\nWithdrawal created event.\nWithdrawal executed Event.\nWithdrawal removed event.\nADL updated clock for long.\nADL updated clock for short.\nAfter state.\nAfter state.\nAuthority.\nAuthority.\nBefore state.\nBefore state.\nBorrowing clock.\nBorrowing factor.\nBorrowing fee for receiver amount.\nBorrowing fee for receiver amount.\nCreate a new burned event.\nClaimable funding fee long token amount.\nClaimable funding fee long token amount.\nClaimable funding fee short token amount.\nClaimable funding fee short token amount.\nGet updated clocks.\nCollateral amount.\nThe time that the position last decreased at.\nDelta borrowing factor.\nDelta claimable amount per size.\nDelta collateral amount.\nDelta funding fee amount per size.\nDelta size in tokens.\nDelta size in usd.\nDeposit account.\nDeposit.\nEmit this event through CPI. This is a manual …\nExecuted.\nExecution price.\nExecution price.\nFees.\nFees.\nFinal output token.\nFinal output token.\nFinal output token.\nTrade flag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate from report.\nCreate from reports.\nCreate from value.\nFunding clock.\nFunding factor per second.\nFunding fee amount.\nFunding fee amount.\nFunding fee amount.\nFunding fee amount per size.\nGet flag.\nGet trade data flag.\nGLV Deposit.\nGLV token.\nGLV token.\nGLV token.\nGLV Withdrawal\nGrow steps.\nAction id.\nAction id.\nAction id.\nAction id.\nAction id.\nAction id.\nThe time that the position last increased at.\nIndex token price.\nIndex token price.\nInput amount.\nThe value of the input amount.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into value.\nReturn whether the collateral side is long.\nReturn whether the collateral side is long.\nReturn whether the trade is caused by an increase order.\nReturn whether the trade is caused by an increase order.\nReturn whether the position side is long.\nReturn whether the position side is long.\nWhether the pool only contains one kind of token, i.e. a …\nThe type of GLV pricing.\nKind.\nUpdate kind.\nTotal liquidation fee amount.\nTotal liquidation fee amount.\nLiquidation fee for pool amount.\nLiquidation fee for pool amount.\nLong token price.\nLong token price.\nLong token.\nLong token amount.\nLong token balance.\nLong token claimable funding amount per size.\nLong token amount for claimable account of holding.\nLong token amount for claimable account of user.\nGet market token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMax price.\nMax price.\nMin price.\nMin price.\nCreate a new minted event.\nMinting cost.\nCreate.\nOrder account.\nOrder.\nOrder address.\nOrder address.\nOrder fee for pool amount.\nOrder fee for pool amount.\nOrder fee for receiver amount.\nOrder fee for receiver amount.\nGet updated other state.\nOutput amount.\nOutput amount.\nOutput amount.\nOutput amounts.\nOutput amounts.\nOwner.\nOwner.\nOwner.\nOwner.\nOwner.\nOwner.\nProcessed pnl.\nFinal PnL value.\nProcessed pnl.\nFinal PnL value.\nGet updated pools.\nPosition account.\nPosition address.\nPosition address.\nPosition impact distribution report.\nPrice impact diff.\nPrice impact diff.\nPrice impact distribution clock.\nPrice impact value.\nPrice impact value.\nPrices.\nPrices.\nReason.\nReason.\nReason.\nReason.\nReason.\nReason.\nReceiver.\nReceiver balance.\nReceiver Delta.\nReport.\nReport.\nReport.\nReport.\nReport.\nRevision.\nRevision.\nRevision.\nRevision.\nRevision.\nRevision.\nRevision.\nRevision.\nRevision.\nCreate a new rewarded event.\nSecondary output amount.\nSecondary output amount.\nSecondary output token.\nSet flag.\nShift.\nShort token price.\nShort token price.\nShort token.\nShort token amount.\nShort token balance.\nShort token claimable funding amount per size.\nShort token amount for claimable account of holding.\nShort token amount for cliamable account of user.\nSize in tokens.\nSize in usd.\nSlot.\nSlot.\nSlot.\nSlot.\nSlot.\nSlot.\nTrade slot.\nTrade slot.\nFinal state.\nFinal state.\nFinal state.\nFinal state.\nFinal state.\nFinal state.\nStore account.\nStore.\nStore account.\nStore.\nStore.\nStore.\nStore.\nStore account.\nStore.\nStore address.\nStore address.\nThe supply of the GLV tokens.\nLatest supply.\nCreate position from this event.\nTotal borrowing fee amount.\nTotal borrowing fee amount.\nTotal minted.\nTrade count.\nTrade id.\nTrade id.\nTrade id.\nTransfer out.\nTransfer out.\nEvent time.\nTimestamp.\nEvent time.\nTimestamp.\nTimestamp.\nTimestamp.\nTimestamp.\nEvent time.\nTimestamp.\nTrade ts.\nTrade ts.\nType.\nUncapped PnL value.\nUncapped PnL value.\nUpdate borrowing state report.\nUpdate borrowing state report.\nUpdate funding state report.\nUpdated at.\nUpdated at slot.\nUser.\nUser.\nTotal value of the GLV.\nWhether the <code>value</code> is maximized.\nVault.\nWithdrawal account.\nWithdrawal.\nAccept the transfer of the receiver address of the given …\nAccept referral code.\nAccept the transfer of the authority (admin) of the given …\nPerform an ADL (Auto-Deleveraging) by keepers.\nCancel order if the corresponding position does not exist.\nCancel referral code transfer.\nReturn whether the signer is the admin of the given store.\nCheck that the authority has the given role in the given …\nClaim fees from the given market.\nClear all prices from the given oracle.\nClose a deposit, either by the owner or by keepers.\nClose an empty claimable account.\nClose GLV deposit.\nClose a GLV shift.\nClose GLV withdrawal.\nClose a confirmed GT exchange.\nClose the given market config buffer account and reclaim …\nClose an order, either by the owner or by keepers.\nClose a shift, either by the owner or by keepers.\nClose a withdrawal, either by the owner or by keepers.\nConfirm GT exchange vault.\nCreate a deposit by the owner.\nCreate GLV deposit.\nCreate GLV shift.\nCreate GLV withdrawal.\nCreate an order by the owner.\nCreate a shift by the owner.\nCreate a withdrawal by the owner.\nDisable an existing role for the given store.\nInsert or enable a role for the given store.\nExecute a decrease order by keepers.\nExecute a deposit by keepers.\nExecute GLV deposit.\nExecute GLV shift.\nExecute GLV withdrawal.\nExecute an increase/swap order by keepers.\nExecute a shift by keepers.\nExecute a withdrawal by keepers.\nCalculate the current market status.\nGet the current market token price based on the provided …\nGrant a role to the given user in the given store.\nSet GT exchange time window (in seconds).\nSet order fee discount factors.\nSet referral reward factors.\nReturn whether the given address is the administrator of …\nReturn whether the given address has the given role in the …\nCreate a new <code>Store</code> account.\nInitialize a GLV token and the corresponding GLV account.\nInitialize GT Mint.\nInitialize a <code>Market</code> account.\nInitialize a market config buffer account.\nInitialize a new market vault for a specific token.\nInitialize a new oracle account for the given store.\nInitialize a custom price feed account.\nInitialize referral code.\nInitialize a new token map account with its store set to …\nInsert an address value into the store’s global …\nInsert an amount value into the store’s global …\nInsert a factor value into the store’s global …\nInsert a new market to the GLV.\nInsert order fee discount for referred user factor to the …\nReturn whether the token config is enabled.\nPerform a liquidation by keepers.\nTransfer tokens into the market and record the amounts in …\nPrepare an associated token account.\nPrepare a GT exchange vault.\nPrepare the position account for orders.\nPrepare a trade event buffer.\nInitialize or validate a User Account.\nPush config items to the given market config buffer …\nPush a new token config to the given token map.\nPush a new synthetic token config to the given token map.\nRemove a market from the GLV.\nRequest a GT exchange.\nRevoke a role from the given user in the given store.\nSet the expected provider for the given token.\nSet the feed config of the given provider for the given …\nTransfer ownership of a market config buffer account to a …\nSet prices from the provided price feeds.\nSet referrer.\nSet the token map address for the store.\nEnable or disable a feature in this deployment.\nToggle the given flag of a market in the given GLV.\nEnable or disable GT minting for the given market.\nEnable or disable the given market.\nEnable or disable the config for the given token.\nGet the decimals of the token.\nGet the expected provider of the given token.\nGet the configured feed of the given token for the …\nGet the name of the token.\nGet the price precision of the token.\nGet the configured timestamp adjustment of the given token …\nRequest to transfer the receiver address to a new one.\nTransfer referral code.\nRequest to transfer the authority (admin) of the given …\nUpdate the ADL (Auto-Deleveraging) state for the market.\nUpdate GLV config.\nUpdate the config of a market in the given GLV.\nUpdate last restarted slot.\nUpdate an item in the market config.\nUpdate a flag in the market config.\nUpdate the market configuration using a pre-populated …\nUpdate an order by the owner.\nUpdates the price data in a custom price feed account …\nPrepare a claimable account to receive tokens during order …\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstructions for config magament.\nInstructions for the exchange funtionality.\nInstructions for disabled features.\nInstructions for GLV.\nInstructions for GT.\nInstructions for <code>Market</code> account.\nInstructions for migrations.\nInstructions for <code>Oracle</code> account.\nInstructions for roles management.\nInstructions for <code>Store</code> account.\nInstructions for tokens and token accounts.\nInstructions for <code>TokenConfig</code> management.\nInstructions for User accounts.\nThe accounts definition of instructions for updating …\nCaller.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStore.\nDeposit creation and cancellation.\nExecute Deposit.\nExecute Order.\nExecute shift.\nExecute Withdrawal.\nOrder creation and cancellation.\nPosition cut.\nCreation and cancellation for shift.\nUpdate ADL state.\nWithdrawal creation and cancellation.\nThe accounts definition for <code>close_deposit</code> instruction.\nThe accounts definition for the <code>create_deposit</code> instruction.\nThe associated token program.\nThe associated token program.\nThe deposit to be created.\nThe deposit to close.\nCHECK: Only the event authority can invoke self-CPI\nThe executor of this instruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitial long token.\nInitial long token.\nThe ATA for initial long token of the owner. CHECK: should …\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe source initial long token account.\ninitial short token.\nInitial short token.\nThe ATA for initial short token of the owner. CHECK: …\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe source initial short token account.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarket.\nMarket token.\nMarket token.\nThe ATA of the owner for receving market tokens.\nThe ATA for market token of the receiver. CHECK: should be …\nThe escrow account for receving market tokens.\nThe escrow account for receving market tokens.\nThe owner of the deposit.\nThe owner of the deposit. CHECK: only use to validate and …\nCHECK: Self-CPI will fail if the program is not the …\nThe receiver of the output funds. CHECK: only the address …\nThe receiver of the deposit. CHECK: only use to validate …\nStore.\nThe store.\nThe store wallet.\nThe system program.\nThe system program.\nThe token program.\nThe token program.\nThe accounts definition for <code>execute_deposit</code> instruction.\nAuthority.\nChainlink Program.\nThe deposit to execute.\nCHECK: Only the event authority can invoke self-CPI\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitial long token.\nThe escrow account for receiving initial long token for …\nInitial long token vault.\nInitial short token.\nThe escrow account for receiving initial short token for …\nInitial short token vault.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarket.\nMarket token mint.\nThe escrow account for receving market tokens.\nOracle buffer to use.\nCHECK: Self-CPI will fail if the program is not the …\nStore.\nThe system program.\nToken Map.\nThe token program.\nThe accounts definition for <code>execute_decrease_order</code> …\nThe accounts definition for <code>execute_increase_or_swap_order</code> …\nThe accounts definition for <code>prepare_trade_event_buffer</code>.\nAuthority.\nAuthority.\nAuthority.\nChainlink Program.\nChainlink Program.\nTrade Event Buffer.\nTrade event buffer.\nTrade event buffer.\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nFinal output token.\nFinal output token.\nThe escrow account for final output tokens.\nThe escrow account for final output tokens.\nFinal output token vault.\nFinal output token vault.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitial collateral token.\nThe escrow account for initial collateral tokens.\nInitial collatearl token vault.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLong token.\nLong token.\nThe escrow account for long tokens.\nThe escrow account for long tokens.\nLong token vault.\nLong token vault.\nMarket.\nMarket.\nOracle buffer to use.\nOracle buffer to use.\nOrder to execute.\nOrder to execute.\nThe owner of the order. CHECK: only used to receive fund.\nThe owner of the order. CHECK: only used to receive fund.\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nShort token.\nShort token.\nThe escrow account for short tokens.\nThe escrow account for short tokens.\nShort token vault.\nShort token vault.\nStore.\nStore.\nStore.\nSystem Program.\nThe system program.\nThe system program.\nToken Map.\nToken Map.\nThe token program.\nThe token program.\nUser Account.\nUser Account.\nThe accounts definition for the <code>execute_shift</code> instruction.\nAuthority.\nChainlink Program.\nCHECK: Only the event authority can invoke self-CPI\nReturns the argument unchanged.\nReturns the argument unchanged.\nFrom market.\nFrom market token.\nThe escrow account for from market tokens.\nFrom market token vault.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOracle buffer to use.\nCHECK: Self-CPI will fail if the program is not the …\nThe shift to execute.\nStore.\nTo market.\nTo market token.\nThe escrow account for to market tokens.\nToken map.\nThe token program.\nCHECK: only ORDER_KEEPER is allowed to execute shift.\nThe accounts deifinition for the <code>execute_withdrawal</code> …\nAuthority.\nChainlink Program.\nCHECK: Only the event authority can invoke self-CPI\nFinal long token.\nThe escrow account for receiving withdrawed final long …\nFinal long token vault.\nFinal short token.\nThe escrow account for receiving withdrawed final short …\nFinal short token vault.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarket.\nMarket token.\nThe escrow account for receving market tokens to burn.\nMarket token vault.\nOracle buffer to use.\nCHECK: Self-CPI will fail if the program is not the …\nStore.\nThe system program.\nToken map.\nThe token program.\nThe withdrawal to execute.\nThe accounts definition for the <code>cancel_order_if_no_position</code>\nThe accounts definition for the <code>close_order</code> instruction.\nThe accounts definitions for <code>create_order</code> instruction.\nThe accounts definition for the <code>prepare_position</code> …\nThe accounts definitions for <code>update_order</code>.\nThe associated token program.\nThe associated token program.\nAuthority.\nCHECK: Only the event authority can invoke self-CPI\nThe executor of this instruction.\nFinal output token. Used as collateral token / swap out …\nFinal output token.\nThe ATA for final output token of the receiver. CHECK: …\nFinal output token escrow account. Only required by …\nThe escrow account for final output tokens.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitial collateral token / swap in token. Only required by …\nInitial collateral token.\nThe ATA for initial collateral token of the owner. CHECK: …\nInitial collateral token escrow account. Only requried by …\nThe escrow account for initial collateral tokens.\nThe source initial token account. Only requried by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLong token of the market.\nLong token.\nThe ATA for long token of the receiver. CHECK: should be …\nLong token escrow. Only required by increase and decrease …\nThe escrow account for long tokens.\nMarket.\nMarket.\nMarket.\nThe order to be created.\nOrder to close.\nOrder to update.\nOrder to check.\nThe owner of the order to be created.\nThe owner of the order to be created.\nThe owner of the order. CHECK: only used to validate and …\nOwner.\nThe position.\nThe related position.\nValidate that the position does not exist (or is owned by …\nCHECK: Self-CPI will fail if the program is not the …\nThe receiver of the output funds. CHECK: only the address …\nThe receiver of the order. CHECK: only used to validate …\nReferrer User Account.\nThe rent receiver of the order. CHECK: only used to …\nShort token of the market.\nShort token.\nThe ATA for initial collateral token of the receiver. …\nShort token escrow. Only required by increase and decrease …\nThe escrow account for short tokens.\nStore.\nStore.\nThe store.\nStore.\nStore.\nThe store wallet.\nThe system program.\nThe system program.\nThe system program.\nThe token program.\nThe token program.\nUser Account.\nUser Account.\nThe accounts definitions for the <code>liquidate</code> and …\nThe associated token program.\nAuthority.\nChainlink Program.\nTrade event buffer.\nCHECK: Only the event authority can invoke self-CPI\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLong token.\nThe escrow account for long tokens.\nLong token vault.\nMarket.\nBuffer for oracle prices.\nThe order to be created.\nThe owner of the position. CHECK: only used to receive …\nCHECK: Self-CPI will fail if the program is not the …\nShort token.\nThe escrow account for short tokens.\nShort token vault.\nStore.\nInitial collatearl token vault. The system program.\nToken map.\nThe token program.\nUser Account.\nThe accounts definition for the <code>close_shift</code> instruction.\nThe accounts definition for the <code>create_shift</code> instruction.\nThe associated token program.\nThe associated token program.\nCHECK: Only the event authority can invoke self-CPI\nThe executor of this instruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFrom market.\nFrom market token.\nFrom market token.\nThe ATA for from market token of the owner. CHECK: should …\nThe escrow account for the from market tokens.\nThe escrow account for the from market tokens.\nThe source from market token account.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe owner.\nThe owenr of the shift. CHECK: only use to validate and …\nCHECK: Self-CPI will fail if the program is not the …\nThe receiver of the output funds. CHECK: only the address …\nThe receiver of the shift. CHECK: only use to validate and …\nShift.\nThe shift to close.\nStore.\nThe store.\nThe store wallet.\nThe system program.\nThe system program.\nTo market.\nTo market token.\nTo market token.\nThe ATA for receiving to market tokens.\nThe ATA for to market token of the receiver. CHECK: should …\nThe escrow account for the to market tokens.\nThe escrow account for the to market tokens.\nThe token program.\nThe token program.\nThe accounts definition for <code>update_adl_state</code>.\nThe address authorized to execute this instruction.\nChainlink Program.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe market to update the ADL state.\nThe oracle buffer to use.\nThe store that owns the market.\nToken map.\nThe accounts definition for the <code>close_withdrawal</code> …\nThe accounts definition for the <code>create_withdrawal</code> …\nThe associated token program.\nThe associated token program.\nCHECK: Only the event authority can invoke self-CPI\nThe executor of this instruction.\nFinal long token.\nFinal long token.\nThe ATA for final long token of the receiver. CHECK: …\nThe escrow account for receiving withdrawed final long …\nThe escrow account for receiving withdrawed final long …\nFinal short token.\nFinal short token.\nThe ATA for final short token of the receiver. CHECK: …\nThe escrow account for receiving withdrawed final short …\nThe escrow account for receiving withdrawed final short …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarket.\nMarket token.\nMarket token.\nThe ATA for market token of the owner. CHECK: should be …\nThe escrow account for receving market tokens to burn.\nThe escrow account for receving market tokens to burn.\nThe source market token account.\nThe owner.\nThe owner of the withdrawal. CHECK: only use to validate …\nCHECK: Self-CPI will fail if the program is not the …\nThe receiver of the output funds. CHECK: only the address …\nThe receiver of the withdrawal. CHECK: only use to …\nStore.\nThe store.\nThe store wallet.\nThe system program.\nThe system program.\nThe token program.\nThe token program.\nThe withdrawal to be created.\nThe withdrawal to close.\nThe accounts definition for <code>toggle_feature</code>.\nAuthority.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStore.\nThe accounts definition for <code>close_glv_deposit</code> instruction.\nThe accounts definition for <code>close_glv_shift</code> instruction.\nThe accounts defintion for <code>close_glv_withdrawal</code> …\nThe accounts definition for <code>create_glv_deposit</code> instruction.\nThe accounts definition for <code>create_glv_shift</code> instruction.\nThe accounts defintion for <code>create_glv_withdrawal</code> …\nThe accounts definition for <code>execute_glv_deposit</code> …\nThe accounts definition for <code>execute_glv_shift</code> instruction.\nThe accounts definition for <code>execute_glv_withdrawal</code> …\nThe accounts definition for <code>initialize_glv</code> instruction.\nThe accounts definition for <code>insert_glv_market</code> instruction.\nThe accounts definition for <code>remove_glv_market</code> instruction.\nThe accounts definition for <code>update_glv_config</code> instruction.\nThe accounts definition for <code>update_glv_market_config</code> …\nThe associated token program.\nThe associated token program.\nAssociated token program.\nAssociated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nThe associated token program.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nChainlink Program.\nChainlink Program.\nChainlink Program.\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nThe executor of this instruction.\nThe executor of this instruction.\nFinal long token.\nFinal long token.\nFinal long token.\nThe ATA for final long token of the receiver. CHECK: …\nThe escrow account for long tokens.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving final long token for …\nFinal long token vault.\nFinal short token.\nFinal short token.\nFinal short token.\nThe ATA for final short token of the receiver. CHECK: …\nThe escrow account for short tokens.\nThe escrow account for receiving final short token for …\nThe escrow account for receiving final short token for …\nFinal short token vault.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFrom market.\nFrom Market.\nFrom market token.\nFrom Market token.\nFrom Market token.\nThe escrow account for from market tokens.\nVault for from market tokens.\nFrom market token vault.\nFunder of the GLV shift. CHECK: only used to receive funds.\nGLV.\nGLV account.\nGlv account.\nGLV.\nGLV to update.\nGLV to modify.\nGLV to modify.\nGLV.\nGLV.\nGLV account.\nGLV.\nGLV account.\nGLV deposit.\nThe GLV deposit to close.\nThe GLV deposit to execute.\nGLV shift.\nThe GLV shift to close.\nThe GLV shift to close.\nGLV Token.\nGLV token.\nGLV token mint.\nGlv token.\nGLV Token.\nGLV token.\nGLV token mint.\nThe ATA for GLV token of the receiver. CHECK: should be …\nThe ATA for GLV token of the owner. CHECK: should be …\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe escrow account for GLV tokens.\nThe token program for GLV token.\nToken program for GLV token.\nThe token program for GLV token.\nThe token program for GLV token.\nToken program for GLV token.\nThe token program for GLV token.\nThe source GLV token account.\nGLV withdrawal.\nThe GLV withdrawal to close.\nThe GLV withdrawal to execute.\nInitial long token.\nInitial long token.\nInitial long token.\nThe ATA for initial long token of the owner. CHECK: should …\nThe escrow account for initial long tokens.\nThe escrow account for receiving initial long token for …\nThe escrow account for receiving initial long token for …\nThe source initial long token account.\nInitial long token vault.\ninitial short token.\nInitial short token.\nInitial short token.\nThe ATA for initial short token of the owner. CHECK: …\nThe escrow account for initial short tokens.\nThe escrow account for receiving initial short token for …\nThe escrow account for receiving initial short token for …\nThe source initial short token account.\nInitial short token vault.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket token.\nMarket token.\nMarket token mint.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token.\nMarket token mint.\nThe ATA for market token of the owner. CHECK: should be …\nThe ATA for market token of the owner. CHECK: should be …\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe escrow account for market tokens.\nThe source market token account.\nMarket token vault for the GLV.\nMarket token vault for the GLV.\nMarket token wihtdrawal vault.\nOracle buffer to use.\nOracle buffer to use.\nOracle buffer to use.\nThe owner of the deposit.\nThe owner of the deposit. CHECK: only use to validate and …\nOwner.\nThe owner of the deposit. CHECK: only use to validate and …\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nThe receiver of the output funds. CHECK: only the address …\nThe recevier of the deposit. CHECK: only use to validate …\nThe receiver of the output funds. CHECK: only the address …\nThe receiver of the deposit. CHECK: only use to validate …\nStore.\nThe store.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe store.\nStore.\nStore.\nThe store.\nStore.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nThe store wallet.\nStore wallet ATA.\nThe system program.\nThe system program.\nThe system program.\nSystem program.\nSystem program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nThe system program.\nTo market.\nTo Market.\nTo market token.\nTo Market token.\nTo Market token.\nThe escrow account for to market tokens.\nVault for to market tokens.\nToken Map.\nToken Map.\nToken Map.\nThe token program.\nThe token program.\nThe token program.\nToken program for market token.\nToken program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nThe token program.\nExecute GLV shift.\nVault.\nVault.\nThe accounts definition for <code>close_gt_exchange</code> instruction.\nThe accounts defintions for GT configuration instructions.\nThe accounts definition for <code>confirm_gt_exchange_vault</code> …\nThe accounts defintions for the <code>initialize_gt</code> instruction.\nThe accounts definition for <code>prepare_gt_exchange_vault</code> …\nThe accounts definition for <code>request_gt_exchange</code> …\nAuthority\nAuthority.\nAuthority.\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCHECK: only used to receive the funds.\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nStore.\nStore.\nStore.\nUser Account.\nThe accounts definition for <code>claim_fees_from_market</code>.\nThe accounts definition for <code>close_market_config_buffer</code>.\nThe accounts definition for <code>initialize_market</code>.\nThe accounts definition for <code>initialize_market_config_buffer</code>…\nThe accounts definition for <code>market_transfer_in</code>.\nThe accounts definition for <code>push_to_market_config_buffer</code>.\nThe accounts definition for read-only instructions for …\nThe accounts definition for read-only instructions for …\nThe accounts definition for …\nThe accounts definition for <code>toggle_gt_minting</code>.\nThe accounts definition for <code>toggle_market</code>.\nThe accounts definition for <code>update_market_config</code> and …\nThe accounts definition for …\nThe address authorized to execute this instruction.\nThe caller.\nAuthority.\nThe caller.\nThe caller.\nThe caller.\nThe authority.\nThe authority.\nAuthority.\nThe caller.\nThe buffer to use.\nBuffer account to create.\nBuffer.\nBuffer.\nBuffer.\nCHECK: Only the event authority can invoke self-CPI\nCHECK: Only the event authority can invoke self-CPI\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe source account.\nThe authority of the source account.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLong token.\nLong token vault must exist.\nThe market account.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket.\nMarket token.\nMarket token mint.\nCHECK: Self-CPI will fail if the program is not the …\nCHECK: Self-CPI will fail if the program is not the …\nReceiver. CHECK: Only used to receive funds after closing …\nShort token.\nShort token vault must exist.\nThe store account.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nThe system program.\nSystem Program.\nThe token map account.\nToken Program.\nThe market vault.\nThe accounts definitions for <code>migrate_referral_code</code> …\nReferral Code.\nAuthority.\nBump.\nCode bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOwner.\nStore.\nStore.\nSystem program.\nThe accounts definition for <code>clear_all_prices</code>.\nThe accounts definition for <code>initialize_oracle</code>.\nThe accounts definition for <code>set_prices_from_price_feed</code>.\nThe authority of the oracle. CHECK: only used as an …\nThe caller.\nThe caller.\nChainlink Program.\nInstructions for custom price feed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe new oracle account.\nOracle.\nOracle.\nThe payer.\nThe store account that will be the owner of the oracle …\nStore.\nStore.\nThe system program.\nToken map.\nThe accounts definition for <code>initialize_price_feed</code> …\nThe accounts definition for …\nAccess Controller Account. CHECK: check by CPI.\nAuthority.\nAuthority.\nChainlink Data Streams Program.\nConfig Account. CHECK: check by CPI.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrice feed.\nPrice Feed Account.\nStore.\nStore.\nThe system program.\nVerifier Account. CHECK: checked by CPI.\nThe accounts definition for <code>check_admin</code> and <code>check_role</code>.\nThe accounts definition for <code>disable_role</code>.\nThe accounts definition for <code>enable_role</code>.\nThe accounts definition for <code>grant_role</code>.\nThe accounts definition for <code>has_admin</code> and <code>has_role</code>.\nThe accounts definition for <code>revoke_role</code>.\nThe address to check for the role.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nVerify that the <code>user</code> is an admin of the given <code>store</code> …\nVerify that the <code>authority</code> has the given role in the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe store account in which the role is defined.\nThe store account in which the role is defined.\nThe store account for which the role is to be …\nThe store account for which the role is to be disabled.\nThe store account to which the new role is to be granted.\nThe store account from which the new role is to be revoked.\nDisable the given role in the data store.\nThe accounts definition for <code>accept_receiver</code>.\nThe accounts definition for <code>accept_store_authority</code>.\nThe accounts definition for <code>initialize</code>.\nThe accounts definition for <code>set_token_map</code>.\nThe accounts definition for <code>transfer_receiver</code>.\nThe accounts definition for <code>transfer_store_authority</code>.\nThe accounts definition for <code>update_last_restarted_slot</code>.\nThe authority of the the <code>Store</code> account.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nThe caller of this instruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe holding address.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNext authority address. CHECK: only the address is used.\nThe next authority.\nThe new receiver. CHECK: only the address is used.\nThe next receiver.\nThe payer for the rent-exempt fee of the <code>Store</code> Account.\nThe receiver address of the the <code>Store</code> account.\nThe account to be used for creating the <code>Store</code> Account. Its …\nThe store account whose authority is to be transferred.\nThe store account whose authority is to be transferred.\nThe store account whose authority is being transferred.\nThe store account whose receiver is to be transferred.\nThe store account whose receiver is being transferred.\nStore.\nThe <code>System</code> program.\nToken map to use.\nThe accounts definition for <code>close_empty_claimable_account</code>.\nThe accounts definition for <code>initialize_market_vault</code>.\nThe accounts definition for …\nThe accounts definition for <code>use_claimable_account</code>.\nThe claimble account.\nCHECK: will be checked during the execution.\nThe token account to prepare.\nThe <code>AssociatedToken</code> program.\nThe caller.\nThe caller.\nThe caller.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nToken mint.\nMint.\nThe mint account for the token account.\nOwner. CHECK: check by CPI.\nCHECK: only use to reference the owner.\nCHECK: only use as the owner of the token account.\nThe payer.\nStore.\nStore.\nSystem Program.\nSystem Program.\nThe <code>System</code> program.\nToken Program.\nToken Program.\nThe <code>Token</code> program.\nThe vault to create.\nThe accounts definition for <code>initialize_token_map</code>.\nThe accounts definition for <code>push_to_token_map</code>.\nThe accounts definition for <code>push_to_token_map_synthetic</code>.\nThe accounts definition of the instructions to read token …\nThe accounts definition for <code>set_expected_provider</code>.\nThe accounts definition for <code>set_feed_config</code>.\nThe accounts definition for <code>toggle_token_config</code>.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nThe authority of the instruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe payer.\nThe store account for the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe store that owns the token map.\nThe system program.\nThe system program.\nThe system program.\nThe token to push config for.\nThe token map account to be initialized.\nThe token map to push config to.\nThe token map to push config to.\nThe token map to update.\nThe token map to update.\nThe token map to update.\nToken map.\nThe accounts definitions for <code>accept_referral_code</code> …\nThe accounts definitions for <code>cancel_referral_code_transfer</code> …\nThe accounts definition for <code>initialize_referral_code</code> …\nThe accounts definitions for <code>prepare_user</code> instruction.\nThe accounts definitions for <code>set_referrer</code> instruction.\nThe accounts definitions for <code>transfer_referral_code</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOwner.\nOwner.\nReceiver.\nReceiver.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferral Code Account.\nReferrer.\nStore.\nStore.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nUser Account.\nDeposit operations.\nExecution fee operations.\nGLV operations.\nMarket operations.\nOrder operations.\nShift operations.\nWithdrawal operations.\nCreate Deposit Params.\nExecution fee in lamports\nReturns the argument unchanged.\nInitial long token amount to deposit.\nInitial short otken amount to deposit.\nCalls <code>U::from(self)</code>.\nThe length of the swap path for long token.\nThe minimum acceptable amount of market tokens to receive.\nThe length of the swap path for short token.\nWhether to unwrap native token when sending funds back.\nCreate GLV Deposit Params.\nCreate GLV Withdrawal Params.\nExecution fee in lamports\nExecution fee in lamports\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe amount of glv tokens to burn.\nInitial long token amount to deposit.\nInitial short otken amount to deposit.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe length of the swap path for long token.\nThe length of the swap path for long token.\nMarket token amount.\nMinimum acceptable final long token to receive.\nMinimum acceptable final short token to receive.\nMinimum acceptable amount of glv tokens to receive.\nMinimum acceptable maount of market tokens to be minted.\nThe length of the swap path for short token.\nThe length of the swap path for short token.\nWhether to unwrap native token when sending funds back.\nWhether to unwrap native token when sending funds back.\nRevertible Liquidity Market Operation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAutoDeleverage.\nCreate Order Arguments.\nLiquidate.\nPosition Cut Kind.\nPosition Cut Operation.\nAcceptable price.\nCreate a builder for building <code>PositionCutOperation</code>. On the …\nGet the collateral token or swap out token address.\nDecrease Position Swap Type.\nExecution fee in lamports.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitial collateral / swap in token amount.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs collateral or the swap out token the long token.\nIs long.\nOrder Kind.\nMin output amount or value.\nWhether to unwrap native token when sending funds back.\nGet size delta.\nSize delta value.\nThe length of the swap path.\nConvert into <code>OrderKind</code>.\nGet the related position kind.\nTrigger price.\nValid from timestamp.\nOperation for creating a shift.\nCreate Shift Params.\nOperation for executing a shift.\nCreate a builder for building <code>CreateShiftOperation</code>. On the …\nCreate a builder for building <code>ExecuteShiftOperation</code>. On …\nExecution fee in lamports.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFrom market token amount.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe minimum acceptable to market token amount to receive.\nCreate Withdrawal Params.\nExecution fee in lamports.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe length of the swap path for long token.\nMarket token amount to burn.\nThe minimum acceptable final long token amount to receive.\nThe minimum acceptable final short token amount to receive.\nThe length of the swap path for short token.\nWhether to unwrap native token when sending funds back.\nType representing the program.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBorrowing fee above optimal usage factor for long.\nBorrowing fee above optimal usage factor for short.\nBorrowing fee base factor for long.\nBorrowing fee base factor for short.\nBorrowing fee exponent for long.\nBorrowing fee exponent for short.\nBorrowing fee factor for long.\nBorrowing fee factor for short.\nBorrowing fee optimal usage factor for long.\nBorrowing fee optimal usage factor for short.\nBorrowing fee receiver factor.\nFunding fee decrease factor per second.\nFunding fee exponent.\nFunding fee factor.\nFunding fee increase factor per second.\nFunding fee max factor per second.\nFunding fee min factor per second.\nFunding fee threshold for decrease funding.\nFunding fee threshold for stable funding.\nType that has market meta.\nLiquidation fee factor.\nLiquidation fee receiver factor.\nMarket config keys.\nMarket Metadata.\nMax negative position impact factor.\nMax open interest for long.\nMax open interest for short.\nMax PNL factor for long ADL.\nMax PNL factor for long deposit.\nMax PNL factor for long trader.\nMax PNL factor for long withdrawal.\nMax PNL factor for short ADL.\nMax PNL factor for short deposit.\nMax PNL factor for short trader.\nMax PNL factor for short withdrawal.\nMax pool amount for long token.\nMax pool amount for short token.\nMax pool value for deposit for long token.\nMax pool value for deposit for short token.\nMax position impact factor for liquidations.\nMax positive position impact factor.\nMin collateral factor.\nMin collateral factor for open interest multiplier for …\nMin collateral factor for open interest multiplier for …\nMin collateral value.\nMin PNL factor after long ADL.\nMin PNL factor after short ADL.\nMin position impact pool amount.\nMin position size usd.\nMin tokens for first deposit.\nNonce Bytes.\nOpen interest reserve factor.\nOrder fee factor for negative impact.\nOrder fee factor for positive impact.\nOrder fee receiver factor.\nPosition impact distribute factor.\nPosition impact exponent.\nPosition impact negative factor.\nPosition impact positive factor.\nReserve factor.\nPrefix seed for program derived addresses.\nData type that has <code>SEED</code>.\nSwap fee factor for negative impact.\nSwap fee factor for positive impact.\nSwap fee receiver factor.\nSwap impact exponent.\nSwap impact negative factor.\nSwap impact positive factor.\nCommon types.\nDeposit.\nFeature.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGLV.\nGT.\nIndex token.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the given token is a valid collateral token.\nLong token.\nThis module defines the <code>Market</code> struct and its associated …\nMarket token.\nGet opposite token.\nOracle.\nOrder.\nGet ordered token set.\nGet pnl token.\nPosition.\nRoles.\nShift.\nShort token.\nStore.\nCheck if the given token is long token or short token, and …\nToken Config.\nUser.\nWithdrawal.\nAction State.\nCancelled.\nCompleted.\nPending.\nA record of token config.\nTokens with feed.\nCommon action types.\nTransition to Cancelled State.\nTransition to Completed State.\nToken feeds for the tokens, which must be of the same …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>TokenRecord</code> from token config, using the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the state is cancelled.\nCheck if the state is completed.\nCheck if the state is completed or cancelled.\nCheck if the state is pending.\nCreate a new <code>TokenRecord</code>\nThe numbers of tokens of each provider.\nProviders set, which must be of the same length with <code>nums</code>.\nSwap Params.\nToken accounts.\nToken with feeds.\nTokens that require prices, which must be of the same …\nCreate from token records.\nAction.\nExtentsion trait for <code>Action</code>.\nAction Flags.\nFlags container generated by the macro.\nAction Header.\nAction Parameters.\nAction Signer.\nAction State.\nCancelled.\nClosable Action.\nClosed Event.\nCompleted.\nMin execution lamports.\nPending.\nShould unwrap native token.\nGet action state.\nAs signer seeds.\nGet the bump.\nGet the creator. We assume that the action account’s …\nGet max allowed execution fee in lamports.\nExecution lamports.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate from value.\nGet flag.\nGet the header.\nAction id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into value.\nGet the market.\nMarket.\nGet max execution lamports.\nCreate a new action signer.\nGet the nonce.\nNonce bytes.\nGet the owner.\nOwner.\nGet the receiver.\nGet the rent receiver.\nSet flag.\nReturns whether the native token should be unwrapped.\nAction signer.\nGet the store.\nStore.\nTo closed event.\nGet last updated timestamp.\nGet last updated slot.\nValidate balance.\nHas swap parameters.\nMax total number of tokens of swap path.\nMax total length of swap paths.\nSwap params.\nGet the first market token in the swap path.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIterate over both swap paths, primary path first then …\nGet the last market token in the swap path.\nGet the number of tokens.\nThe number of tokens.\nPadding.\nSwap paths.\nGet the length of primary swap path.\nThe length of primary swap path.\nGet primary swap path.\nGet the length of secondary swap path.\nThe length of secondary swap path.\nGet secondary swap path.\nGet the swap params.\nConvert to tokens with feed.\nConvert to token records.\nGet all tokens for the action.\nTokens.\nGet unique market tokens excluding current market token.\nGet validated primary swap path.\nGet validated secondary swap path.\nToken Account.\nTokens Collector.\nGet account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize with token account.\nInitialize with token account interface.\nInsert a new token.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a vec.\nCreate a new <code>TokensCollector</code>.\nConvert to <code>TokensWithFeed</code>.\nGet token.\nGet token and account.\nA record of token config.\nTokens with feed.\nToken feeds for the tokens, which must be of the same …\nThe numbers of tokens of each provider.\nProviders set, which must be of the same length with <code>nums</code>.\nCollect token records for the give tokens.\nTokens that require prices, which must be of the same …\nDeposit.\nDeposit Params.\nToken Accounts.\nFisrt Deposit Receiver Seed.\nPDA for first deposit owner.\nGet first deposit receiver.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitial long token accounts.\nInitial short token accounts.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet market token.\nGet market token account.\nGet swap params.\nGet tokens.\nAction Disabled Flag.\nAuto-deleveraging Order.\nCancel.\nCreate.\nDefault Action.\nDeposit.\nDisabled Features State.\nFixed size map generated by the macro.\nDomain Disabled Flag.\nExecute.\nGLV deposit.\nGLV shift.\nGLV withdrawal.\nLimit Decrease Order.\nLimit Increase Order.\nLimit Swap Order.\nLiquidation Order.\nMarket Decrease Order.\nMarket Increase Order.\nMarket Swap Order.")