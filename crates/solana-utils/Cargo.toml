[package]
name = "gmsol-solana-utils"
version.workspace = true
edition.workspace = true
license-file.workspace = true
description.workspace = true
repository.workspace = true
documentation = "https://docs.rs/gmsol-solana-utils"
readme.workspace = true
keywords.workspace = true

[features]
serde = ["dep:serde", "smallvec/serde"]
anchor-lang = ["dep:anchor-lang"]
anchor = ["anchor-lang", "dep:anchor-client"]
client = [
    "tracing",
    "solana-client",
    "solana-transaction-status",
    "serde_json",
    "tokio",
    "futures-util",
]
make-bundle-builder = ["client"]
client-traits = [
    "solana-rpc-client-api",
    "solana-account-decoder-client-types",
    "tracing",
    "serde",
    "serde_json",
]
http-rpc-sender = ["client-traits", "reqwest/json", "backon"]
openssl-vendored = ["reqwest?/native-tls-vendored"]

[dependencies]
solana-sdk = { workspace = true }
thiserror = { workspace = true }
base64 = { workspace = true }
dyn-clone = { workspace = true }
url = { workspace = true }
smallvec = { workspace = true }
spl-memo = { workspace = true }
either = { workspace = true }

tracing = { workspace = true, optional = true }
solana-client = { workspace = true, optional = true }
solana-transaction-status = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }
futures-util = { workspace = true, optional = true }

serde = { workspace = true, optional = true, features = ["derive"] }
anchor-lang = { workspace = true, optional = true }
anchor-client = { workspace = true, optional = true }

# feat:client-traits
solana-rpc-client-api = { workspace = true, optional = true }
solana-account-decoder-client-types = { workspace = true, optional = true }

# feat:http-sender
reqwest = { workspace = true, optional = true }
backon = { workspace = true, optional = true }

[build-dependencies]
cfg_aliases = { workspace = true }

[dev-dependencies]
bincode = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
tokio = { workspace = true, features = [
    "macros",
    "rt",
    "sync",
], default-features = false }
wasm-bindgen-test = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { workspace = true, features = [
    "time",
    "rt",
    "macros",
    "sync",
    "rt-multi-thread",
] }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
