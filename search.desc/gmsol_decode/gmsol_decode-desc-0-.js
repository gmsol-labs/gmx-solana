searchState.loadedDescShard("gmsol_decode", 0, "This crate provides utils for decoding GMSOL types.\nType that can be decoded by <code>Decoder</code>.\nDecoder.\nErrors.\nImplement <code>Decode</code> for GMSOL types.\nImplement <code>Decode</code> for <code>AccountDeserialize</code>.\nImplement <code>Decode</code> for CPI events.\nImplement <code>Decode</code> for <code>ZeroCopy</code>.\nImplement <code>Decode</code> for a list of types.\nValues.\nType that can be decoded by a <code>Decoder</code>.\nDecode with the given <code>Decoder</code>.\nVisitor.\nValue Type.\nType that walks through a <code>Decoder</code>.\nVisit an account.\nVisit Anchor CPI events.\nVisit bytes.\nVisit data owned by a program.\nDecoder for received program data.\nAccount Access.\nCPI Event Access.\nHint that the visitor is expecting an <code>AccountInfo</code>.\nHint that the visitor is expecting <code>AnchorCPIEvent</code> list.\nHint that the visitor is expecting a <code>Data</code>.\nHint that the visitor is expecting a <code>OwnedData</code>.\nHint that the visitor is expecting a <code>Transaction</code>.\nDecoder implementations.\nAccess an account info.\nGet the account data.\nGet the lamports of the account.\nGet the owner of the account.\nGet the pubkey of the account.\nGet the slot at which the account data was updated.\nAccess a Anchor CPI Event.\nGet the index in the block of the transaction where the …\nDecode next event.\nGet the signature of the transaction where the events were …\nGet the slot of the transaction where the events were …\nDecoder derived from <code>AccountAccess</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a <code>Decoder</code> from an <code>AccountAccess</code>.\nDecoders for Solana datas.\nAccess CPI Events.\nCPI Event decoder.\nCPI Event filter.\nCPI Events.\nSlot and index.\nTransaction Decoder.\nAccess CPI Events.\nSubscribe to CPI Event from the given program.\nAdd a Event authority and its Program ID to the CPI Event …\nAdd a Program ID to the CPI Event filter.\nAdd event authority and its program id directly.\nGet event authorities.\nCPI Events.\nExtract CPI events.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new transaction decoder.\nCreate a new <code>CPIEvent</code> decoder.\nCreate a new access for CPI Events.\nGet programs.\nSet CPI events filter.\nGet signature.\nSignature.\nGet slot.\nSlot and index.\nGet transaction.\nAnchor Error.\nCustom Error.\nDecode Error.\nInvalid Type.\nNot found.\nCreate a custom error.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nImplement <code>Decode</code> for types defined in <code>gmsol_store</code>.\nVariant <code>Account</code>.\nVariant <code>BorrowingFeesUpdated</code>.\nVariant <code>CPIEvents</code>.\nVariant <code>Deposit</code>.\nVariant <code>DepositExecuted</code>.\nVariant <code>DepositRemoved</code>.\nA untagged decodable enum <code>GMSOLAccountData</code>.\nA untagged decodable enum <code>GMSOLCPIEvent</code>.\nA untagged decodable enum <code>GMSOLData</code>.\nVariant <code>GlvDeposit</code>.\nVariant <code>GlvDepositRemoved</code>.\nVariant <code>GlvPricing</code>.\nVariant <code>GlvShift</code>.\nVariant <code>GlvWithdrawal</code>.\nVariant <code>GlvWithdrawalRemoved</code>.\nVariant <code>GtUpdated</code>.\nVariant <code>Market</code>.\nVariant <code>MarketFeesUpdated</code>.\nVariant <code>MarketStateUpdated</code>.\nVariant <code>Order</code>.\nVariant <code>OrderRemoved</code>.\nVariant <code>Position</code>.\nVariant <code>PositionDecreased</code>.\nVariant <code>PositionIncreased</code>.\nVariant <code>Shift</code>.\nVariant <code>ShiftRemoved</code>.\nVariant <code>Store</code>.\nVariant <code>SwapExecuted</code>.\nVariant <code>TradeEvent</code>.\nVariant <code>UnknownOwnedData</code>.\nVariant <code>UnknownOwnedData</code>.\nVariant <code>Withdrawal</code>.\nVariant <code>WithdrawalExecuted</code>.\nVariant <code>WithdrawalRemoved</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA decoded account.\nVisitor that produces an <code>AccountDeserialize</code>.\nAnchor CPI Events.\nVisitor that produces an CPI <code>Event</code>.\nData owned by a program.\nA data decoder.\nUnknown Data.\nVisitor that produces a <code>ZeroCopy</code>.\nGet data.\nGet the data of the account.\nGet the event datas.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nImplement <code>Decode</code> for <code>AccountDeserialize</code>.\nImplement <code>Decode</code> for CPI events.\nImplement <code>Decode</code> for <code>ZeroCopy</code>.\nGet the <code>index</code> in the block of the transaction where the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the <code>OwnedData</code> and get the inner data.\nConvert into the inner data.\nGet lamports of the account.\nCreate a <code>Decoder</code> from the data directly.\nGet owner program id.\nGet the owner of the account.\nGet the address of the account.\nGet the <code>signature</code> of the transaction where the events were …\nGet the slot at which the account was updated.\nGet the slot at which the events were generated.")