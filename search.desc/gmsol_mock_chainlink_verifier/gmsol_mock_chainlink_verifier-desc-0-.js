searchState.loadedDescShard("gmsol_mock_chainlink_verifier", 0, "Access Controller.\nThe static program ID\nConst version of <code>ID</code>\nVerifyer Account.\nAccess Controller Account.\nAccess Controller.\nAn Anchor generated module, providing a set of structs …\nConfirms that a given pubkey is equivalent to the program …\nCHECK: Program will validate this based on report input.\nThe Anchor codegen exposes a programming model where a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the program ID\nConst version of <code>ID</code>\nAn Anchor generated module containing the program’s set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPayer.\nModule representing the program.\nThe System Program.\nUser.\nVerifier Account.\nVerifier Account.\nGenerated client accounts for <code>Initialize</code>.\nGenerated client accounts for <code>VerifyContext</code>.\nAccess Controller Account.\nAccess Controller.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPayer.\nThe System Program.\nUser.\nVerifier Account.\nVerifier Account.\nAn Anchor generated module, providing a set of structs …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerated CPI struct of the accounts for <code>Initialize</code>.\nGenerated CPI struct of the accounts for <code>VerifyContext</code>.\nAccess Controller Account.\nAccess Controller.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPayer.\nThe System Program.\nUser.\nVerifier Account.\nVerifier Account.\nInstruction.\nInstruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType representing the program.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")