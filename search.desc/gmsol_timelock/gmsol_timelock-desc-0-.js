searchState.loadedDescShard("gmsol_timelock", 0, "The static program ID\nConst version of <code>ID</code>\nAn Anchor generated module, providing a set of structs …\nConfirms that a given pubkey is equivalent to the program …\nThe Anchor codegen exposes a programming model where a …\nReturns the program ID\nConst version of <code>ID</code>\nAn Anchor generated module containing the program’s set …\nInstructions;\nModule representing the program.\nRoles for the timelock program.\nStates.\nGenerated client accounts for <code>ApproveInstruction</code>.\nGenerated client accounts for <code>ApproveInstructions</code>.\nGenerated client accounts for <code>CancelInstruction</code>.\nGenerated client accounts for <code>CancelInstructions</code>.\nGenerated client accounts for <code>CreateInstructionBuffer</code>.\nGenerated client accounts for <code>ExecuteInstruction</code>.\nGenerated client accounts for <code>IncreaseDelay</code>.\nGenerated client accounts for <code>InitializeConfig</code>.\nGenerated client accounts for <code>InitializeExecutor</code>.\nGenerated client accounts for <code>RevokeRole</code>.\nGenerated client accounts for <code>SetExpectedPriceProvider</code>.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAdmin executor.\nExecutor to initialize.\nExpected executor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstruction to approve.\nInstruction to cancel.\nInstruction to execute.\nInstruction buffer to create.\nInstruction Program.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPayer.\nRent receiver.\nRent receiver.\nRent receiver.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nSystem program.\nThe system program.\nThe system program.\nSystem program.\nConfig.\nTimelock config.\nToken to update.\nToken map.\nUser.\nAdmin executor wallet.\nExecutor wallet.\nExecutor Wallet. the instruction to close it.\nExecutor Wallet.\nExecutor Wallet.\nAn Anchor generated module, providing a set of structs …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerated CPI struct of the accounts for <code>ApproveInstruction</code>…\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>CancelInstruction</code>.\nGenerated CPI struct of the accounts for <code>CancelInstructions</code>…\nGenerated CPI struct of the accounts for …\nGenerated CPI struct of the accounts for <code>ExecuteInstruction</code>…\nGenerated CPI struct of the accounts for <code>IncreaseDelay</code>.\nGenerated CPI struct of the accounts for <code>InitializeConfig</code>.\nGenerated CPI struct of the accounts for <code>InitializeExecutor</code>…\nGenerated CPI struct of the accounts for <code>RevokeRole</code>.\nGenerated CPI struct of the accounts for …\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAdmin executor.\nExecutor to initialize.\nExpected executor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstruction to approve.\nInstruction to cancel.\nInstruction to execute.\nInstruction buffer to create.\nInstruction Program.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPayer.\nRent receiver.\nRent receiver.\nRent receiver.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nSystem program.\nThe system program.\nThe system program.\nSystem program.\nConfig.\nTimelock config.\nToken to update.\nToken map.\nUser.\nAdmin executor wallet.\nExecutor wallet.\nExecutor Wallet. the instruction to close it.\nExecutor Wallet.\nExecutor Wallet.\nApprove instruction.\nApprove multiple instructions.\nCancel instruction.\nCancel multiple instructions that sharing the same <code>executor</code>…\nCreate instruction buffer.\nExecute instruction.\nIncrease timelock delay.\nInitialize timelock config.\nInitialize executor.\nRevoke role.\nSet expected price provider.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nInstruction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstructions that bypassed timelock.\nInstructions for timelock config.\nInstuctions for executors.\nInstructions for instruction buffer.\nThe accounts definition for <code>revoke_role</code>.\nThe accounts definition for <code>set_expected_price_provider</code>.\nAuthority.\nAuthority.\nExecutor.\nExecutor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStore. CHECK: check by CPI.\nStore. CHECK: check by CPI.\nStore program.\nStore program.\nSystem program.\nToken to update. CHECK: only used as an identifier.\nToken map. CHECK: check by CPI.\nUser. CHECK: only its address is used.\nExecutor Wallet.\nExecutor Wallet.\nThe accounts definition for <code>increase_delay</code>.\nThe accounts definition for <code>initialize_config</code>.\nAuthority.\nAuthority.\nAdmin executor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStore. CHECK: check by CPI.\nStore. CHECK: check by CPI.\nStore program.\nStore program.\nSystem program.\nConfig.\nAdmin executor wallet.\nThe accounts definition for <code>initialize_executor</code>.\nExecutor to initialize.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPayer.\nStore. CHECK: check by CPI.\nThe system program.\nExecutor wallet. CHECK: only the bump is used.\nThe accounts definition for <code>approve_instruction</code>.\nThe accounts definition for <code>approve_instructions</code>.\nThe accounts definition for <code>cancel_instruction</code>.\nThe accounts definition for <code>cancel_instructions</code>.\nThe accounts definition for <code>create_instruction_buffer</code>.\nThe acccounts definition for <code>execute_instruction</code>.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nAuthority.\nExpected executor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nExecutor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstruction to approve.\nInstruction to cancel.\nInstruction to execute.\nInstruction buffer to create.\nInstruction Program. CHECK: only used as an address.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRent receiver. CHECK: only used to receive funds.\nRent receiver. CHECK: only used to receive funds.\nRent receiver. CHECK: only used to receive funds.\nStore. CHECK: check by CPI.\nStore. CHECK: check by CPI.\nStore. CHECK: check by CPI.\nStore. CHECK: check by CPI.\nStore. CHECK: check by CPI.\nStore.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nStore program.\nThe system program.\nTimelock config.\nExecutor Wallet. CHECK: <code>wallet</code> doesn’t have to be a …\nType representing the program.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAdmin role name.\nTimelocked prefix.\nTimelocked admin.\nTimelocked market keeper.\nTimelock Admin.\nTimelock Keeper.\nGet timelocked role.\nTimelock Config.\nExecutor.\nInstruction.\nTimelock Config.\nGet delay.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExecutor.\nExecutor Wallet Signer.\nWallet Seed.\nCreate executor wallet PDA.\nFind executor wallet PDA.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet role name.\nApproved.\nInstruction Access.\nInstruction Account.\nFlags of Instruction Accounts.\nFlags of Instruction.\nFlags container generated by the macro.\nInstruction Header.\nInstruction Loader.\nReference to the instruction.\nIs signer.\nIs mutable.\nGet accounts.\nGet approver.\nGet the approved timestamp.\nGet data.\nGet executor.\nFlags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate from value.\nGet flag.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into value.\nReturns whether the instruction is approved.\nReturn whether the instruction is executable.\nLoad and initialize the instruction.\nLoad instruction.\nGet the number of accounts.\nGet program ID.\nPubkey.\nGet rent receiver.\nSet flag.\nConvert to instruction.\nUtils for using instruction buffer.\nGet wallet.\nGet executor wallet.\nInstruction Buffer.\nReturns the argument unchanged.\nGet header.\nCalls <code>U::from(self)</code>.")